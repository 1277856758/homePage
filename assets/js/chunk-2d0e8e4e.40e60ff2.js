(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0e8e4e"],{"8ae4":function(t,e,n){"use strict";n.r(e);var s=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[t._m(0),t._m(1),n("pre",{staticClass:"hljs"},[n("span",{staticClass:"hljs-lang",on:{click:t.ctrlC}},[t._v("复制代码")]),n("code",[t._v("1. List ==> ArrayList LinkedList\n2. Queue ==> LinkedList\n3. Set\n")])]),t._m(2),n("pre",{staticClass:"hljs"},[n("span",{staticClass:"hljs-lang",on:{click:t.ctrlC}},[t._v("复制代码")]),n("code",[t._v("@RestController = @Controller + @ResponseBody组成，等号右边两位同志简单介绍两句，\n就明白我们@RestController的意义了：\n\n@Controller 将当前修饰的类注入SpringBoot IOC容器，使得从该类所在的项目跑起来的过程中，\n这个类就被实例化。当然也有语义化的作用，即代表该类是充当Controller的作用\n\n@ResponseBody 它的作用简短截说就是指该类中所有的API接口返回的数据，甭管你对应的\n方法返回Map或是其他Object，它会以Json字符串的形式返回给客户端，本人尝试了一下，\n如果返回的是String类型，则仍然是String。\n")])]),t._m(3),n("pre",{staticClass:"hljs"},[n("span",{staticClass:"hljs-lang",on:{click:t.ctrlC}},[t._v("复制代码")]),n("code",[t._v("RequestMapping是一个用来处理请求地址映射的注解，可用于类或方法上。\n用于类上，表示类中的所有响应请求的方法都是以该地址作为父路径。\n\nvalue：    指定请求的实际地址，指定的地址可以是URI Template 模式（后面将会说明）；\nmethod：   指定请求的method类型， GET、POST、PUT、DELETE等；\nconsumes： 指定处理请求的提交内容类型（Content-Type），例如application/json, text/html;\nproduces:  指定返回的内容类型，仅当request请求头中的(Accept)类型中包含该指定类型才返回consumes： \n           指定处理请求的提交内容类型（Content-Type），例如application/json, text/html;\nparams：   指定request中必须包含某些参数值是，才让该方法处理。\nheaders：  指定request中必须包含某些指定的header值，才能让该方法处理请求。                                                          \n")])]),n("pre",{staticClass:"hljs"},[n("span",{staticClass:"hljs-lang",on:{click:t.ctrlC}},[t._v("复制代码")]),n("code",[t._v("@ControllerAdvice        // 全局异常注解\n@ExceptionHandler        // 异常回调 \n@ComponentScan           // 添加扫描路径  \n@Override                // 重写方法\n@MapperScan\n@SpriBootApplication\n\n")])]),n("pre",{staticClass:"hljs"},[n("span",{staticClass:"hljs-lang",on:{click:t.ctrlC}},[t._v("复制代码")]),n("code",[t._v("1. java.security 【加密】\n2. lobbok 【插件，优化冗余代码】\n    @Date  简化get ser counstor\n    @Slf4j 打印日志\n3. exception 异常错误处理\n")])])])},a=[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("h3",{attrs:{id:"%E9%9B%86%E5%90%88"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#%E9%9B%86%E5%90%88"}}),t._v(" 集合")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("h4",{attrs:{id:"collectin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#collectin"}}),t._v(" Collectin")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("h5",{attrs:{id:"%40restcontroller"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#%40restcontroller"}}),t._v(" @RestController")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("h5",{attrs:{id:"%40requestmapppping"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#%40requestmapppping"}}),t._v(" @RequestMapppping")])}],r=n("c701"),l={},c=Object(r["a"])(l,s,a,!1,null,null,null);e["default"]=c.exports}}]);