(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2227e5"],{cf9e:function(s,t,a){"use strict";a.r(t);var e=function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[s._m(0),s._m(1),s._m(2),s._m(3),s._m(4),s._m(5),s._m(6),s._m(7),s._m(8),s._m(9),s._m(10),s._m(11),s._m(12),s._m(13),s._m(14),s._m(15),s._m(16),s._m(17),a("pre",{staticClass:"hljs"},[a("span",{staticClass:"hljs-lang",on:{click:s.ctrlC}},[a("em",[s._v("js")]),s._v("/复制代码")]),s._m(18)]),a("pre",{staticClass:"hljs"},[a("span",{staticClass:"hljs-lang",on:{click:s.ctrlC}},[a("em",[s._v("js")]),s._v("/复制代码")]),s._m(19)]),s._m(20),s._m(21),s._m(22),s._m(23),s._m(24),a("pre",{staticClass:"hljs"},[a("span",{staticClass:"hljs-lang",on:{click:s.ctrlC}},[a("em",[s._v("js")]),s._v("/复制代码")]),s._m(25)]),s._m(26),s._m(27),s._m(28),s._m(29),s._m(30),a("p",[s._v("不重复编译，性能更好\n更容易使用\n只针对CSS|目前缺失功能，HMR|")]),s._m(31),s._m(32),s._m(33),s._m(34),s._m(35),a("pre",{staticClass:"hljs"},[a("span",{staticClass:"hljs-lang",on:{click:s.ctrlC}},[a("em",[s._v("js")]),s._v("/复制代码")]),s._m(36)]),s._m(37),s._m(38),s._m(39),s._m(40),s._m(41),s._m(42),a("pre",{staticClass:"hljs"},[a("span",{staticClass:"hljs-lang",on:{click:s.ctrlC}},[s._v("复制代码")]),a("code",[s._v("在网站和用户之间引入CDN之后，用户不会有任何与原来不同的感觉。\n使用CDN服务的网站，只需将其域名的解析权交给CDN的负载均衡设备，CDN负载均衡设备将为用户选择一台合适的缓存服务器，用户通过访问这台缓存服务器来获取自己所需的数据。\n由于缓存服务器部署在网络运营商的机房，而这些运营商又是用户的网络服务提供商，因此用户可以以最短的路径，最快的速度对网站进行访问。因此，CDN可以加速用户访问速度，减少源站中心负载压力。\n")])]),s._m(43),a("pre",{staticClass:"hljs"},[a("span",{staticClass:"hljs-lang",on:{click:s.ctrlC}},[s._v("复制代码")]),a("code",[s._v("1. 用户在浏览器中输入要访问的域名。\n2. 浏览器向DNS服务器请求对域名进行解析。由于CDN对域名解析进行了调整，DNS服务器会最终将域名的解析权交给CNAME指向的CDN专用DNS服务器。\n3. CDN的DNS服务器将CDN的负载均衡设备IP地址返回给用户。\n4. 用户向CDN的负载均衡设备发起内容URL访问请求。\n5. CDN负载均衡设备会为用户选择一台合适的缓存服务器提供服务。\n选择的依据包括：\n根据用户IP地址，判断哪一台服务器距离用户最近；\n根据用户所请求的URL中携带的内容名称，判断哪一台服务器上有用户所需内容；\n查询各个服务器的负载情况，判断哪一台服务器的负载较小。\n基于以上这些依据的综合分析之后，负载均衡设置会把缓存服务器的IP地址返回给用户。\n用户向缓存服务器发出请求。\n缓存服务器响应用户请求，将用户所需内容传送到用户。\n如果这台缓存服务器上并没有用户想要的内容，而负载均衡设备依然将它分配给了用户，那么这台服务器就要向它的上一级缓存服务器请求内容，直至追溯到网站的源服务器将内容拉取到本地。\n")])]),s._m(44),s._m(45),a("pre",{staticClass:"hljs"},[a("span",{staticClass:"hljs-lang",on:{click:s.ctrlC}},[s._v("复制代码")]),a("code",[s._v("loader 用来处理文件，进行编译、压缩，\n自定义loader的时候需要用到webpack声明的loader-utils工具获取webpack配置\nloader其实是一个执行函数，如果目标文件需要多个loader才可能生成的化，需要定义多个loader\nloader的执行循序与声明相反，是重后往前执行的。\n")])]),s._m(46),a("pre",{staticClass:"hljs"},[a("span",{staticClass:"hljs-lang",on:{click:s.ctrlC}},[s._v("复制代码")]),a("code",[s._v("plugin功能强大可以做到loader做不到的事情，打包优化，重新定义一环境变量，可以完成任何任务\n")])])])},n=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h3",{attrs:{id:"webpackcase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpackcase"}}),s._v(" webpackCase")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"1.-webpack%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E3%80%81%E6%A6%82%E5%BF%B5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#1.-webpack%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84%E3%80%81%E6%A6%82%E5%BF%B5"}}),s._v(" 1. webpack的基本结构、概念")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("webpack是对javsScript一个静态打包器，根据配置的入口文件（默认./src），递归构建依赖关系图，其中包含应用程序各个模块，并将这些模块把宝成一个或多个bundle")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("table",[a("thead",[a("tr",[a("th",[s._v("基本概念")]),a("th",[s._v("描述")])])]),a("tbody",[a("tr",[a("td",[s._v("entry")]),a("td",[s._v("打包依赖的入口文件,设置一个或多个默认(./src)")])]),a("tr",[a("td",[s._v("ouput")]),a("td",[s._v("生成的输出文件，只能有一个")])]),a("tr",[a("td",[s._v("loader")]),a("td",[s._v("对目标文件进行编译，转换成特定文件。test: /使用正则匹配文件/use:[css-loader，style-loader]")])]),a("tr",[a("td",[s._v("plugins")]),a("td",[s._v("插件功能强大，用于能完成loader不能完成的工作。通过require引入，new *()调用")])]),a("tr",[a("td",[s._v("mode")]),a("td",[s._v("通过选择 development 或 production 之中的一个，来设置 mode 参数，你可以启用相应模式下的 webpack 内置的优化")])])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"2.-webpack%E5%81%9A%E8%BF%87%E5%93%AA%E4%BA%9B%E4%BC%98%E5%8C%96%E3%80%81%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E3%80%81%E6%89%93%E5%8C%85%E7%AD%96%E7%95%A5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#2.-webpack%E5%81%9A%E8%BF%87%E5%93%AA%E4%BA%9B%E4%BC%98%E5%8C%96%E3%80%81%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E3%80%81%E6%89%93%E5%8C%85%E7%AD%96%E7%95%A5"}}),s._v(" 2. webpack做过哪些优化、开发效率、打包策略")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("加快构建编译速度")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("noParse")]),a("li",[s._v("lgnorePlugin")]),a("li",[s._v("thread-loader")]),a("li",[s._v("cnd缓存机制")]),a("li",[s._v("resolve.modules、resolve.alias")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("构建最小的打包体积")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("开启js压缩 terser代替uglify")]),a("li",[s._v("miage-webpack-loader压缩图片")]),a("li",[s._v("压缩css,提取js文件中的css（mini-css-extract-plugin）")]),a("li",[s._v("cdn缓存")]),a("li",[s._v("vue-cli3 可视化打包工具 或配置插件查看打包大小和时间（webpack-bundle-analyzer/speed-measure-webpack-plugin）")]),a("li",[s._v("分割代码 splitChunksPlugin(按大小30kb，被引用次数、按需加载最大请求行数，缓存数组，默认引用超过两次的被缓存)")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("提取公共资源")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"3.-%E5%9F%BA%E6%9C%AC%E7%9A%84loader%E3%80%81plugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#3.-%E5%9F%BA%E6%9C%AC%E7%9A%84loader%E3%80%81plugins"}}),s._v(" 3. 基本的loader、plugins")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"4.-webpack4%E5%B8%A6%E6%9D%A5%E7%9A%84%E4%BC%98%E5%8C%96"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#4.-webpack4%E5%B8%A6%E6%9D%A5%E7%9A%84%E4%BC%98%E5%8C%96"}}),s._v(" 4. webpack4带来的优化")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"5.-resolve.modules%E5%92%8Cresolve.alias%E7%9A%84%E5%8C%BA%E5%88%AB"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#5.-resolve.modules%E5%92%8Cresolve.alias%E7%9A%84%E5%8C%BA%E5%88%AB"}}),s._v(" 5. resolve.modules和resolve.alias的区别")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("resolve.modules 设置哪个目录开始依赖文件\nresolve.alias 设置别名, webpack重别名目录开始寻找，减少检索时间")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"6.-noparse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#6.-noparse"}}),s._v(" 6. noParse")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("对于一些不需要依赖其他库的依赖的插件序曲解析，提升打包速度\nnoParse ==> module.noParse = /jquery/ (不去解析jquery中依赖库)")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"7.-lgnoreplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#7.-lgnoreplugin"}}),s._v(" 7. lgnorePlugin")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("webpack的内置插件\n指定忽略目录")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("code",[a("span",{staticClass:"hljs-comment"},[s._v("// 比如我们要使用moment这个第三方依赖库，该库主要是对时间进行格式化，并且支持多个国家语言。")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 假设我们的代码值引入了以下一个API")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" moment "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'moment'")]),s._v("\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("//设置语言")]),s._v("\nmoment.locale("),a("span",{staticClass:"hljs-string"},[s._v("'zh-cn'")]),s._v(");\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" r = moment().endOf("),a("span",{staticClass:"hljs-string"},[s._v("'day'")]),s._v(").fromNow();\n"),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(r);\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 这样打印出来的就是中文的时间，因为我在使用这个API的时候，前面设置了语言类型moment.locale为中文zh-cn。")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 但是，虽然我设置了语言为中文，但是在打包的时候，是会将所有语言都打包进去的。这样就导致包很大，打包速度又慢")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 所以，最好能够少打包一些没用的依赖目录进去")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 而moment的包含’./locale/‘该字段路径的文件目录就是各国语言的目录，比如’./locale/zh-cn’就是中文语言")]),s._v("\n")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("code",[a("span",{staticClass:"hljs-comment"},[s._v("//IgnorePlugin的使用")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" Webpack = "),a("span",{staticClass:"hljs-built_in"},[s._v("require")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'webpack'")]),s._v(");\nplugins:[\n\t"),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" Webpack.IgnorePlugin("),a("span",{staticClass:"hljs-regexp"},[s._v("/\\.\\/locale/")]),s._v(",/moment/),"),a("span",{staticClass:"hljs-comment"},[s._v("//moment这个库中，如果引用了./locale/目录的内容，就忽略掉，不会打包进去")]),s._v("\n]\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 问题存在与解决")]),s._v("\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 我们虽然按照上面的方法忽略了包含’./locale/'该字段路径的文件目录,但是也使得我们使用的时候不能显示中文语言了，所以这个时候可以手动引入中文语言的目录")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" moment "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'moment'")]),s._v("\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("//设置语言")]),s._v("\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("//手动引入所需要的语言包")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'moment/locale/zh-cn'")]),s._v(";\nmoment.locale("),a("span",{staticClass:"hljs-string"},[s._v("'zh-cn'")]),s._v(");\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" r = moment().endOf("),a("span",{staticClass:"hljs-string"},[s._v("'day'")]),s._v(").fromNow();\n"),a("span",{staticClass:"hljs-built_in"},[s._v("console")]),s._v(".log(r);\n")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"8.-dillplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#8.-dillplugin"}}),s._v(" 8. dillPlugin")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("DLLPlugin 和 DLLReferencePlugin 用某种方法实现了拆分 bundles，同时还大大提升了构建的速度。")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"9.-thread-loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#9.-thread-loader"}}),s._v(" 9. thread-loader")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("把这个 loader 放置在其他 loader 之前， 放置在这个 loader 之后的 loader 就会在一个单独的 worker 池(worker pool)中运行\n在 worker 池(worker pool)中运行的 loader 是受到限制的。例如：")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ul",[a("li",[s._v("这些 loader 不能产生新的文件。")]),a("li",[s._v("这些 loader 不能使用定制的 loader API（也就是说，通过插件）。")]),a("li",[s._v("这些 loader 无法获取 webpack 的选项设置。")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("code",[a("span",{staticClass:"hljs-built_in"},[s._v("module")]),s._v(".exports = {\n"),a("span",{staticClass:"hljs-attr"},[s._v("module")]),s._v(": {\n"),a("span",{staticClass:"hljs-attr"},[s._v("rules")]),s._v(": [\n    {\n    "),a("span",{staticClass:"hljs-attr"},[s._v("test")]),s._v(": "),a("span",{staticClass:"hljs-regexp"},[s._v("/\\.js$/")]),s._v(",\n    "),a("span",{staticClass:"hljs-attr"},[s._v("include")]),s._v(": path.resolve("),a("span",{staticClass:"hljs-string"},[s._v('"src"')]),s._v("),\n    "),a("span",{staticClass:"hljs-attr"},[s._v("use")]),s._v(": [\n        "),a("span",{staticClass:"hljs-string"},[s._v('"thread-loader"')]),s._v(",\n        "),a("span",{staticClass:"hljs-string"},[s._v('"expensive-loader"')]),s._v("\n    ]\n    }\n]\n}\n};\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 可选项")]),s._v("\nuse: [\n  {\n    "),a("span",{staticClass:"hljs-attr"},[s._v("loader")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v('"thread-loader"')]),s._v(",\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 有同样配置的 loader 会共享一个 worker 池(worker pool)")]),s._v("\n    "),a("span",{staticClass:"hljs-attr"},[s._v("options")]),s._v(": {\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// 产生的 worker 的数量，默认是 cpu 的核心数")]),s._v("\n      "),a("span",{staticClass:"hljs-attr"},[s._v("workers")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v(",\n\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// 一个 worker 进程中并行执行工作的数量")]),s._v("\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// 默认为 20")]),s._v("\n      "),a("span",{staticClass:"hljs-attr"},[s._v("workerParallelJobs")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("50")]),s._v(",\n\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// 额外的 node.js 参数")]),s._v("\n      "),a("span",{staticClass:"hljs-attr"},[s._v("workerNodeArgs")]),s._v(": ["),a("span",{staticClass:"hljs-string"},[s._v("'--max-old-space-size'")]),s._v(", "),a("span",{staticClass:"hljs-string"},[s._v("'1024'")]),s._v("],\n\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// 闲置时定时删除 worker 进程")]),s._v("\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// 默认为 500ms")]),s._v("\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// 可以设置为无穷大， 这样在监视模式(--watch)下可以保持 worker 持续存在")]),s._v("\n      "),a("span",{staticClass:"hljs-attr"},[s._v("poolTimeout")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("2000")]),s._v(",\n\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// 池(pool)分配给 worker 的工作数量")]),s._v("\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// 默认为 200")]),s._v("\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// 降低这个数值会降低总体的效率，但是会提升工作分布更均一")]),s._v("\n      "),a("span",{staticClass:"hljs-attr"},[s._v("poolParallelJobs")]),s._v(": "),a("span",{staticClass:"hljs-number"},[s._v("50")]),s._v(",\n\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// 池(pool)的名称")]),s._v("\n      "),a("span",{staticClass:"hljs-comment"},[s._v("// 可以修改名称来创建其余选项都一样的池(pool)")]),s._v("\n      "),a("span",{staticClass:"hljs-attr"},[s._v("name")]),s._v(": "),a("span",{staticClass:"hljs-string"},[s._v('"my-pool"')]),s._v("\n    }\n  },\n  "),a("span",{staticClass:"hljs-string"},[s._v('"expensive-loader"')]),s._v("\n]\n")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"10.-terser-webpack-plugin%E3%80%81ugligy-webpack-plugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#10.-terser-webpack-plugin%E3%80%81ugligy-webpack-plugins"}}),s._v(" 10. terser-webpack-plugin、ugligy-webpack-plugins")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("用来压缩js terser 支持es6语法 uglify不支持")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"11.-mini-css-extract-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#11.-mini-css-extract-plugin"}}),s._v(" 11. mini-css-extract-plugin")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("将CSS提取为独立的文件的插件，对每个包含css的js文件都会创建一个CSS文件，支持按需加载css和sourceMap")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("table",[a("thead",[a("tr",[a("th",[s._v("优点")]),a("th",[s._v("缺点")])])]),a("tbody",[a("tr",[a("td",[s._v("异步加载")]),a("td")])])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"12.-%E4%BC%98%E5%8C%96webpack%E6%89%93%E5%8C%85%E4%BD%93%E7%A7%AF"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#12.-%E4%BC%98%E5%8C%96webpack%E6%89%93%E5%8C%85%E4%BD%93%E7%A7%AF"}}),s._v(" 12. 优化webpack打包体积")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"13.-%E6%8F%90%E5%8F%96%E9%A1%B5%E9%9D%A2%E5%85%AC%E5%85%B1%E8%B5%84%E6%BA%90"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#13.-%E6%8F%90%E5%8F%96%E9%A1%B5%E9%9D%A2%E5%85%AC%E5%85%B1%E8%B5%84%E6%BA%90"}}),s._v(" 13. 提取页面公共资源")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("splitChunksPlugin 提取公共代码")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"14.-%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#14.-%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9"}}),s._v(" 14. 图片压缩")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("image-webpack-loader 进行图片压缩")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("code",[s._v(" "),a("span",{staticClass:"hljs-comment"},[s._v("//添加loader")]),s._v("\n{\n    "),a("span",{staticClass:"hljs-attr"},[s._v("test")]),s._v(":"),a("span",{staticClass:"hljs-regexp"},[s._v("/\\.(png|svg|jpg|gif)$/")]),s._v(",\n    "),a("span",{staticClass:"hljs-attr"},[s._v("use")]),s._v(":[\n        "),a("span",{staticClass:"hljs-string"},[s._v('"file-loader"')]),s._v(",\n        "),a("span",{staticClass:"hljs-string"},[s._v("'image-webpack-loader'")]),s._v(",\n    ]\n}\n")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"15.-speed-measure-webpack-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#15.-speed-measure-webpack-plugin"}}),s._v(" 15. speed-measure-webpack-plugin")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("包裹webpack配置打包时计算每个模块的打包时间，进行优化\nvue-cli3 提供可视化UI，可查看每个模块打包的时间体积")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"16.-webpack%E7%83%AD%E6%9B%B4%E6%96%B0%E5%8E%9F%E7%90%86"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#16.-webpack%E7%83%AD%E6%9B%B4%E6%96%B0%E5%8E%9F%E7%90%86"}}),s._v(" 16. webpack热更新原理")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"17.-cdn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#17.-cdn"}}),s._v(" 17. CDN")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("blockquote",[a("p",[s._v("CDN是为了让用户能够最快的获取缓存资源，本质是重一比较优质的服务器获取源码，达到快速访问，减少原站的压力")])])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"%E6%80%BB%E7%BB%93"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E6%80%BB%E7%BB%93"}}),s._v(" 总结")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"cdn-%E8%AF%B7%E6%B1%82%E6%AD%A5%E9%AA%A4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn-%E8%AF%B7%E6%B1%82%E6%AD%A5%E9%AA%A4"}}),s._v(" CDN 请求步骤")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"18.-loader-%E5%92%8C-plugin-%E7%9A%84%E5%8C%BA%E5%88%AB"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#18.-loader-%E5%92%8C-plugin-%E7%9A%84%E5%8C%BA%E5%88%AB"}}),s._v(" 18. loader 和 plugin 的区别")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"loader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loader"}}),s._v(" loader")])},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("h4",{attrs:{id:"plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugin"}}),s._v(" plugin")])}],l=a("c701"),r={},c=Object(l["a"])(r,e,n,!1,null,null,null);t["default"]=c.exports}}]);