(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0d6040"],{"716f":function(s,t,a){"use strict";a.r(t);var n=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},e=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css"}}),s._v(" css")]),a("pre",{staticClass:"hljs"},[a("code",[s._v("CSS（Cascading Style Sheets，层叠样式表）是一种将表示样式应用到标记的系统。\nCSS以设计、改变其HTML页面的样式而知名，并使用于Web和其他媒介，如XML文档中。\n1996年12月W3C推出了CSS规范的第一个版本，1998年W3C发布了CSS的第二个版本即CSS2.0,\n2001年5月W3C开始进行CSS3标准的制定，到目前为止该标准还没有最终定稿\n")])]),a("h2",{attrs:{id:"css-4%E7%A7%8D%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-4%E7%A7%8D%E5%BC%95%E5%85%A5%E6%96%B9%E5%BC%8F"}}),s._v(" css 4种引入方式")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-number"},[s._v("1.")]),s._v(" 引入外部样式文件\n    <link type="),a("span",{staticClass:"hljs-string"},[s._v('"text/css"')]),s._v(" rel="),a("span",{staticClass:"hljs-string"},[s._v('"stylesheet"')]),s._v(" href="),a("span",{staticClass:"hljs-string"},[s._v('"CSS样式文件的绝对地址"')]),s._v("> \n    (推荐使用) 当HTML页面被渲染时，link引用的CSS文件会被同时加载，我们也可以通过JavaScript控制DOM去改变link元素的CSS内容\n\n"),a("span",{staticClass:"hljs-number"},[s._v("2.")]),s._v(" 导入外部样式单\n    （"),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v("）<style type="),a("span",{staticClass:"hljs-string"},[s._v('"text/css"')]),s._v(">    \n            @"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"CSS样式文件的绝对地址"')]),s._v(";\n            @"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" url("),a("span",{staticClass:"hljs-string"},[s._v('"样式文件的绝对地址"')]),s._v(");\n        "),a("span",{staticClass:"xml"},[a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("style")]),s._v(">")])]),s._v("    \n    （"),a("span",{staticClass:"hljs-number"},[s._v("2")]),s._v("）    "),a("span",{staticClass:"hljs-comment"},[s._v("/*某个CSS文件*/")]),s._v("\n            @"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"另一个CSS文件的地址"')]),s._v(";\n\n    @"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v("是由CSS提供的一种导入样式的方式，当页面被加载时，@"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v("会等到页面全部被加载完成时再加载CSS样式，所以在页面还未加载完成期间，页面还没有CSS样式效果，会导致“屏闪”，通过@"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v("导入的CSS样式是无法用DOM去控制的。\n\n"),a("span",{staticClass:"hljs-number"},[s._v("3.")]),s._v(" 使用内联样式\n   <div style="),a("span",{staticClass:"hljs-string"},[s._v('"color: #ccc; width: 200px; height: 100px;"')]),s._v(">"),a("span",{staticClass:"xml"},[a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("div")]),s._v(">")])]),s._v("\n   应用于调试元素\n\n"),a("span",{staticClass:"hljs-number"},[s._v("4.")]),s._v(" 使用内部CSS样式\n    <style type="),a("span",{staticClass:"hljs-string"},[s._v('"css/text"')]),s._v(">\n        .text{\n            font-size: "),a("span",{staticClass:"hljs-number"},[s._v("20")]),s._v("px;\n            padding-left: o;\n            margin: "),a("span",{staticClass:"hljs-number"},[s._v("0")]),s._v(" auto;\n        } \n    <"),a("span",{staticClass:"hljs-regexp"},[s._v("/style>     \n")])])]),a("h2",{attrs:{id:"%E6%9D%83%E9%87%8D%E4%B8%8E%E9%80%89%E6%8B%A9%E5%99%A8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E6%9D%83%E9%87%8D%E4%B8%8E%E9%80%89%E6%8B%A9%E5%99%A8"}}),s._v(" 权重与选择器")]),a("h3",{attrs:{id:"%E6%9D%83%E9%87%8D"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E6%9D%83%E9%87%8D"}}),s._v(" 权重")]),a("pre",{staticClass:"hljs"},[a("code",[s._v("  基本选择器                               权  重\n    *               (全局)                   0\n    e               (标签)                   1\n    .               (class)                 10\n    #               (id)                   100\n    styel           (行内)                 1000\n    !important                            >1000\n\n")])]),a("h3",{attrs:{id:"%E5%B1%82%E6%AC%A1%E9%80%89%E6%8B%A9%E5%99%A8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E5%B1%82%E6%AC%A1%E9%80%89%E6%8B%A9%E5%99%A8"}}),s._v(" 层次选择器")]),a("pre",{staticClass:"hljs"},[a("code",[s._v("       选择器\t                      例子                                 描述\n element,element              \t     div,p                    选择所有 <div> 元素和所有 <p> 元素\n \n element element\t             div p\t              选择 <div> 元素内部的所有 <p> 元素\n\n element>element\t             div > p\t              选择父元素为 <div> 元素的所有 <p> 元素\n\n element+element\t             div + p\t              选择紧接在 <div> 元素之后的所有 <p> 元素\n\n")])]),a("h3",{attrs:{id:"%E5%B1%9E%E6%80%A7%E9%80%89%E6%8B%A9%E5%99%A8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E5%B1%9E%E6%80%A7%E9%80%89%E6%8B%A9%E5%99%A8"}}),s._v(" 属性选择器")]),a("pre",{staticClass:"hljs"},[a("code",[s._v('       选择器\t                   例子                                 描述\n    [attribute]                \t[target]                    选择带有 target 属性所有元素\n  [attribute=value]           [target=_blank]               选择 target="_blank" 的所有元素\n  [attribute~=value]          [title~=flower]               选择 title 属性值具有多个空格分隔的值 其中包含单词 "flower" 的所有元素\n    [attr*=val]                 [attr*=val]                 选择attr属性值的任意位置包含val的所有元素\n    [attr^=val]                 [attr^=val]                 选择attr属性值以val开头的所有元素\n    [attr$=val]                 [attr$=val]                 选择attr属性值以val结尾的所有元素\n    [attr|=val]                 [attr|=val]                 选择拥有值以val或val-开头的attr属性的所有元素\n')])]),a("h3",{attrs:{id:"%E4%BC%AA%E7%B1%BB%E9%80%89%E6%8B%A9%E5%99%A8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E4%BC%AA%E7%B1%BB%E9%80%89%E6%8B%A9%E5%99%A8"}}),s._v(" 伪类选择器")]),a("pre",{staticClass:"hljs"},[a("code",[s._v("       选择器\t                   例子                            描述\n      :visited                   a:visited                     访问的链接过后\n      :active                    a:active                      选择活动链接时\n      :hover                     a:hover                       鼠标划过时\n      :focus                     a:focus                       获取焦点时\n\n")])]),a("h3",{attrs:{id:"%E7%BB%93%E6%9E%84%E4%BC%AA%E7%B1%BB%E9%80%89%E6%8B%A9%E5%99%A8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E7%BB%93%E6%9E%84%E4%BC%AA%E7%B1%BB%E9%80%89%E6%8B%A9%E5%99%A8"}}),s._v(" 结构伪类选择器")]),a("pre",{staticClass:"hljs"},[a("code",[s._v("      选择器\t                                             描述\nselector:first-child\t         选择selector所匹配的元素，且该元素是其父元素的第一个子元素等价于 selector:nth-child(1)\n\nselector:last-child\t         选择selector所匹配的元素，且该元素是其父元素的最后一个子元素等价于 selector:nth-last-child(1)\n\nselector:nth-child(n)\t         选择selector所匹配的元素，且该元素是其父元素的第n个子元素其中 n 的值可以使正数(1、2、3...)，\n                                 也可以是关键字(even、odd)，也可以是公式(2n+1、2n-1...)，且 n 的起始值是1而不是0\n\nselector:nth-last-child(n)\t 选择selector所匹配的元素，且该元素是其父元素的倒数第n个子元素\n\nselector:first-of-type\t         选择selector所匹配的元素，且该元素是其父元素的第一个特定类型的子元素\n\nselector:last-of-type\t         选择selector所匹配的元素，且该元素是其父元素的最后一个特定类型的子元素")])])])}],l=a("2877"),r={},i=Object(l["a"])(r,n,e,!1,null,null,null);t["default"]=i.exports}}]);