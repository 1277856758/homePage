(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0b9081"],{"30e3":function(s,t,a){"use strict";a.r(t);var n=function(){var s=this,t=s.$createElement;s._self._c;return s._m(0)},e=[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("blockquote",[a("p",[s._v("1 "),a("a",{attrs:{href:"#action"}},[s._v("action")]),s._v("\n2 "),a("a",{attrs:{href:"#reducer"}},[s._v("reducer")]),s._v("\n3 "),a("a",{attrs:{href:"#store"}},[s._v("store")]),s._v("\n4 "),a("a",{attrs:{href:"#Provider"}},[s._v("Provider")]),s._v("\n5 "),a("a",{attrs:{href:"#connect"}},[s._v("connect")])])]),a("h3",{attrs:{id:"%E4%B8%80.-action"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E4%B8%80.-action"}}),s._v(" 一. action "),a("a",{attrs:{id:"action"}})]),a("pre",{staticClass:"hljs"},[a("code",[s._v("Action 是把数据从应用（这里之所以不叫 view 是因为这些数据有可能是服务器响应，用户输入或其它非 view 的数据 ）传到 store 的有效载荷。它是 store 数据的唯一来源。一般来说你会通过 store.dispatch() 将 action 传到 store。\n")])]),a("h4",{attrs:{id:"action-%2B-ts-%E4%BB%A3%E7%A0%81-(action-%E5%8F%AA%E6%98%AF%E5%AE%9A%E4%B9%89%E4%BA%86%E4%B8%80%E4%B8%AA%E6%93%8D%E4%BD%9Cstate%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%8C%E5%B9%B6%E8%A7%84%E5%AE%9A%E5%AF%B9%E5%BA%94state%E7%9A%84%E7%BB%93%E6%9E%84)"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#action-%2B-ts-%E4%BB%A3%E7%A0%81-(action-%E5%8F%AA%E6%98%AF%E5%AE%9A%E4%B9%89%E4%BA%86%E4%B8%80%E4%B8%AA%E6%93%8D%E4%BD%9Cstate%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%8C%E5%B9%B6%E8%A7%84%E5%AE%9A%E5%AF%B9%E5%BA%94state%E7%9A%84%E7%BB%93%E6%9E%84)"}}),s._v(" action + ts 代码 (action 只是定义了一个操作state的方法，并规定对应state的结构)")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" { ADD_TODO, TOGGLE_TODO} "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'../constants'")]),s._v(" "),a("span",{staticClass:"hljs-comment"},[s._v("// 同意定义的action名称")]),s._v("\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("let")]),s._v(" nextTodoId = "),a("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(";\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" interface IAddTodoAction {\n    "),a("span",{staticClass:"hljs-attr"},[s._v("id")]),s._v(": number;\n    text: string;\n    type: ADD_TODO;\n}\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" interface IToggleTodoAction {\n    "),a("span",{staticClass:"hljs-attr"},[s._v("id")]),s._v(": number;\n    type: TOGGLE_TODO;\n}\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" type TodoAction = IAddTodoAction | IToggleTodoAction;\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 添加一条信息")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" addTodo = (text: string) : "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("IAddTodoAction")]),s._v(" =>")]),s._v(" ({\n    "),a("span",{staticClass:"hljs-attr"},[s._v("id")]),s._v(": nextTodoId++,\n    text,\n    "),a("span",{staticClass:"hljs-attr"},[s._v("type")]),s._v(": ADD_TODO\n})\n\n"),a("span",{staticClass:"hljs-comment"},[s._v("// 点击事件")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" toggleTodo = (id: number): "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("IToggleTodoAction")]),s._v(" =>")]),s._v(" (\n    {\n        id,\n        "),a("span",{staticClass:"hljs-attr"},[s._v("type")]),s._v(": TOGGLE_TODO\n    }\n)\n")])]),a("h3",{attrs:{id:"%E4%BA%8C.-reducer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E4%BA%8C.-reducer"}}),s._v(" 二. reducer "),a("a",{attrs:{id:"reducer"}})]),a("pre",{staticClass:"hljs"},[a("code",[s._v("Reducers 指定了应用状态的变化如何响应 actions并发送到 store 的，记住 actions 只是描述了有事情发生了这一事实，并没有描述应用如何更新 state。\n")])]),a("h4",{attrs:{id:"reducer-%E6%98%AF%E5%AF%B9%E5%BA%94action%E6%96%B9%E6%B3%95%E7%9A%84%E5%85%B7%E4%BD%93%E6%89%A7%E8%A1%8C%E9%80%BB%E8%BE%91"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reducer-%E6%98%AF%E5%AF%B9%E5%BA%94action%E6%96%B9%E6%B3%95%E7%9A%84%E5%85%B7%E4%BD%93%E6%89%A7%E8%A1%8C%E9%80%BB%E8%BE%91"}}),s._v(" reducer 是对应action方法的具体执行逻辑")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" { TodoAction } "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'../actions'")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" { ADD_TODO, TOGGLE_TODO} "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'../constants'")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" { Todo } "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'../types'")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" todos = "),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("state : Todo[] = [], action : TodoAction")]),s._v(") =>")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("switch")]),s._v("(action.type){\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("case")]),s._v(" ADD_TODO:\n            "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" [\n                ...state,\n                {\n                    "),a("span",{staticClass:"hljs-attr"},[s._v("id")]),s._v(": action.id,\n                    "),a("span",{staticClass:"hljs-attr"},[s._v("text")]),s._v(": action.text,\n                    "),a("span",{staticClass:"hljs-attr"},[s._v("completed")]),s._v(": "),a("span",{staticClass:"hljs-literal"},[s._v("false")]),s._v(",\n                }\n            ];\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("case")]),s._v(" TOGGLE_TODO:\n                "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" state.map((todo: Todo): "),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("Todo")]),s._v(" =>")]),s._v("\n                (todo.id === action.id)\n                    ? {...todo, "),a("span",{staticClass:"hljs-attr"},[s._v("completed")]),s._v(": !todo.completed}\n                    : todo\n            );\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("default")]),s._v(":\n            "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" state;\n\n    }\n}\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("default")]),s._v(" todos;\n")])]),a("h3",{attrs:{id:"%E4%B8%89.-store"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E4%B8%89.-store"}}),s._v(" 三. store "),a("a",{attrs:{id:"store"}})]),a("pre",{staticClass:"hljs"},[a("code",[s._v("store就是把action和reducer联系到一起的对象，store本质上是一个状态树，保存了所有对象的状态。任何UI组件都可以直接从store访问特定对象的状态。\n在 Redux 中，所有的数据（比如state）被保存在一个store容器中 ，在一个应用程序中只能有一个store对象。当一个store接收到一个action，它将把这个action代理给相关的reducer。reducer是一个纯函数，它可以查看之前的状态，执行一个action并且返回一个新的状态。\n")])]),a("h4",{attrs:{id:"store-%E7%9A%84%E5%88%9B%E5%BB%BA%E4%BA%8E%E5%A6%82%E4%BD%95%E5%BA%94%E7%94%A8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#store-%E7%9A%84%E5%88%9B%E5%BB%BA%E4%BA%8E%E5%A6%82%E4%BD%95%E5%BA%94%E7%94%A8"}}),s._v(" store 的创建于如何应用")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-comment"},[s._v("// 1、创建 store")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" store = createStore(reducer);\n\nReactDOM.render(\n    "),a("span",{staticClass:"hljs-comment"},[s._v("// 2、然后使用react-redux的Provider将props与容器连通起来")]),s._v("\n    "),a("span",{staticClass:"xml"},[a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("Provider")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("store")]),s._v("="),a("span",{staticClass:"hljs-string"},[s._v("{")]),s._v(" "),a("span",{staticClass:"hljs-attr"},[s._v("store")]),s._v(" }>")]),s._v("\n        "),a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("App")]),s._v("/>")]),s._v("\n    "),a("span",{staticClass:"hljs-tag"},[s._v("</"),a("span",{staticClass:"hljs-name"},[s._v("Provider")]),s._v(">")])]),s._v(" ,\n    "),a("span",{staticClass:"hljs-built_in"},[s._v("document")]),s._v(".getElementById("),a("span",{staticClass:"hljs-string"},[s._v("'root'")]),s._v(") "),a("span",{staticClass:"hljs-keyword"},[s._v("as")]),s._v(" HTMLElement\n);\n")])]),a("h3",{attrs:{id:"%E5%9B%9B.-provider"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E5%9B%9B.-provider"}}),s._v(" 四. Provider "),a("a",{attrs:{id:"Provider"}})]),a("pre",{staticClass:"hljs"},[a("code",[s._v("Provider 其实就只是一个外层容器，它的作用就是通过配合 connect 来达到跨层级传递数据。使用时只需将Provider定义为整个项目最外层的组件，并设置好store。那么整个项目都可以直接获取这个store。它的原理其实是通过React中的Context来实现的。它大致的核心代码如下\n")])]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" React, {Component} "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'react'")]),s._v("\n"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" {PropTypes} "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'prop-types'")]),s._v("\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("default")]),s._v(" "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Provider")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" ")]),s._v("{\n    getChildContext() {\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" {"),a("span",{staticClass:"hljs-attr"},[s._v("store")]),s._v(": "),a("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".props.store}\n    }\n\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("constructor")]),s._v("() {\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("super")]),s._v("()\n\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".state = {}\n    }\n\n    render() {\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".props.children\n    }\n}\n\nProvider.childContextTypes = {\n    "),a("span",{staticClass:"hljs-attr"},[s._v("store")]),s._v(": PropTypes.object\n}\n")])]),a("h3",{attrs:{id:"%E4%BA%94.-connect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#%E4%BA%94.-connect"}}),s._v(" 五. connect "),a("a",{attrs:{id:"connect"}})]),a("pre",{staticClass:"hljs"},[a("code",[s._v("connect 的作用是连接React组件与 Redux store，它包在我们的容器组件的外一层，它接收上面 Provider 提供的 store 里面的 state 和 dispatch，传给一个构造函数，返回一个对象，以属性形式传给我们的容器组件。\n\n它共有四个参数mapStateToProps, mapDispatchToProps, mergeProps以及options。\n\nmapStateToProps 的作用是将store里的state（数据源）绑定到指定组件的props中\nmapDispatchToProps 的作用是将store里的action（操作数据的方法）绑定到指定组件的props中\n另外两个方法一般情况下使用不到，这里就不做介绍。。\n\n那么 connect 是怎么将React组件与 Redux store连接起来的呢？其主要逻辑可以总结成以下代码：\n")])]),a("h4",{attrs:{id:"connect-%2B-ts-%E4%B8%8E-eact%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1(ts%E8%A7%84%E8%8C%83%E3%80%82%E3%80%82%E3%80%82%E3%80%82%E3%80%82%E3%80%82%E3%80%82%E3%80%82)"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#connect-%2B-ts-%E4%B8%8E-eact%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1(ts%E8%A7%84%E8%8C%83%E3%80%82%E3%80%82%E3%80%82%E3%80%82%E3%80%82%E3%80%82%E3%80%82%E3%80%82)"}}),s._v(" connect + ts 与 eact组件通信(ts规范。。。。。。。。)")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" getVisibleTodos = "),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("todos: Todo[], filter = VisibilityFilters.SHOW_ALL")]),s._v(") =>")]),s._v(" {\n    "),a("span",{staticClass:"hljs-keyword"},[s._v("switch")]),s._v(" (filter) {\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("case")]),s._v(" VisibilityFilters.SHOW_ALL:\n            "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" todos;\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("case")]),s._v(" VisibilityFilters.SHOW_COMPLETED:\n            "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" todos.filter("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("t")]),s._v(" =>")]),s._v(" t.completed);\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("case")]),s._v(" VisibilityFilters.SHOW_ACTIVE:\n            "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" todos.filter("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("t")]),s._v(" =>")]),s._v(" !t.completed);\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("default")]),s._v(":\n            "),a("span",{staticClass:"hljs-keyword"},[s._v("throw")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("new")]),s._v(" "),a("span",{staticClass:"hljs-built_in"},[s._v("Error")]),s._v("("),a("span",{staticClass:"hljs-string"},[s._v("'Unknown filter: '")]),s._v(" + filter);\n    }\n}\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" mapStateToProps = (state: IStoreState) : { "),a("span",{staticClass:"hljs-attr"},[s._v("todos")]),s._v(" : Todo[] } => (\n    {\n        "),a("span",{staticClass:"hljs-attr"},[s._v("todos")]),s._v(": getVisibleTodos(state.todos, state.visibilityFilter)\n    }\n)\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" mapDispatchProps = "),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("dispatch: Dispatch")]),s._v(") : {"),a("span",{staticClass:"hljs-params"},[s._v("toggleTodo")]),s._v(": ("),a("span",{staticClass:"hljs-params"},[s._v("id : number")]),s._v(") =>")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("void")]),s._v(" } => (\n    {\n        "),a("span",{staticClass:"hljs-attr"},[s._v("toggleTodo")]),s._v(": "),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("id: number")]),s._v(") =>")]),s._v(" dispatch(toggleTodo(id))\n    }\n) \n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("export")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("default")]),s._v(" connect(mapStateToProps, mapDispatchProps)(TodoList)\n\n")])]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" {Component} "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"react"')]),s._v(";\n"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" React "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v('"react"')]),s._v(";\n"),a("span",{staticClass:"hljs-keyword"},[s._v("import")]),s._v(" {PropTypes} "),a("span",{staticClass:"hljs-keyword"},[s._v("from")]),s._v(" "),a("span",{staticClass:"hljs-string"},[s._v("'prop-types'")]),s._v("\n\n"),a("span",{staticClass:"hljs-keyword"},[s._v("const")]),s._v(" connect = "),a("span",{staticClass:"hljs-function"},[s._v("("),a("span",{staticClass:"hljs-params"},[s._v("mapStateToProps, mapDispatchToProps")]),s._v(") =>")]),s._v(" ("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("WrappedComponent")]),s._v(" =>")]),s._v(" {\n    "),a("span",{staticClass:"hljs-class"},[a("span",{staticClass:"hljs-keyword"},[s._v("class")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Connect")]),s._v(" "),a("span",{staticClass:"hljs-keyword"},[s._v("extends")]),s._v(" "),a("span",{staticClass:"hljs-title"},[s._v("Component")]),s._v(" ")]),s._v("{\n        "),a("span",{staticClass:"hljs-keyword"},[s._v("constructor")]),s._v("() {\n            "),a("span",{staticClass:"hljs-keyword"},[s._v("super")]),s._v("()\n\n            "),a("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".state = {}\n\n        }\n\n        componentWillMount() {\n            "),a("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".unSubscribe = "),a("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".context.store.subscribe("),a("span",{staticClass:"hljs-function"},[a("span",{staticClass:"hljs-params"},[s._v("()")]),s._v(" =>")]),s._v(" {\n                "),a("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".setState(mapStateToProps("),a("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".context.store.getState()))\n            })\n        }\n\n        componentWillUnmount() {\n            "),a("span",{staticClass:"hljs-keyword"},[s._v("this")]),s._v(".unSubscribe()\n        }\n\n        render() {\n            "),a("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" "),a("span",{staticClass:"xml"},[a("span",{staticClass:"hljs-tag"},[s._v("<"),a("span",{staticClass:"hljs-name"},[s._v("WrappedComponent")]),s._v("  {"),a("span",{staticClass:"hljs-attr"},[s._v("...this.state")]),s._v("}\n                                      {"),a("span",{staticClass:"hljs-attr"},[s._v("...mapDispatchToProps")]),s._v("("),a("span",{staticClass:"hljs-attr"},[s._v("this.context.store.dispatch")]),s._v(")}/>")]),s._v("\n        }\n    }\n\n    Connect.contextTypes = {\n        store: PropTypes.object\n    }\n    return Connect\n})\n\nexport default connect\n")])])])])}],o=a("2877"),r={},l=Object(o["a"])(r,n,e,!1,null,null,null);t["default"]=l.exports}}]);